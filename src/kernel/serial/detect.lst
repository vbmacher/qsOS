Turbo Assembler	 Version 3.1	    01/10/06 16:05:18	    Page 1
detect.asm



      1					 ;
      2					 ; SERIAL.ASM
      3					 ;
      4					 ; (c) Copyright 2005, vbmacher
      5					 ;
      6					 ; Tento modul patri ku	urovni 1
      7					 ;
      8	    0000			 .model	compact
      9					 .386
     10	    0000			 .data
     11	    0000  ????				 irq dw	?
     12	    0002  ??				 imr db	?
     13	    0003  ??				 ier db	?
     14	    0004  ??				 lcr db	?
     15	    0005  ??				 mcr db	?
     16
     17	    0006			 .code
     18					   extrn _PORT:	word
     19
     20					 ;int detectUART()
     21					 ;POZOR: musi byt nastaveny PORT
     22					 public	_detectUART
     23	    0000			 _detectUART proc near
     24	    0000  52				 push dx
     25	    0001  2E: 8B 16 0000e		 mov dx, word ptr [_PORT]
     26	    0006  83 C2	03			 add dx, 3
     27	    0009  B0 1B				 mov al, 1Bh
     28	    000B  EE				 out dx, al
     29	    000C  90				 nop
     30	    000D  90				 nop
     31	    000E  90				 nop
     32	    000F  EC				 in al,	dx
     33	    0010  3C 1B				 cmp al, 1Bh
     34	    0012  74 04				 je @1
     35	    0014  33 C0				 xor ax, ax	  ; unknown chip
     36	    0016  EB 54				 jmp short @uret
     37	    0018  B0 03			 @1:	 mov al, 3
     38	    001A  EE				 out dx, al
     39	    001B  90				 nop
     40	    001C  90				 nop
     41	    001D  90				 nop
     42	    001E  EC				 in al,	dx
     43	    001F  3C 03				 cmp al, 3
     44	    0021  74 04				 je @2
     45	    0023  33 C0				 xor ax, ax	  ; unknown chip
     46	    0025  EB 45				 jmp short @uret
     47	    0027			 @2:	 ;SCR ?
     48	    0027  83 C2	04			 add dx, 4
     49	    002A  B0 55				 mov al, 55h
     50	    002C  EE				 out dx, al
     51	    002D  90				 nop
     52	    002E  90				 nop
     53	    002F  90				 nop
     54	    0030  EC				 in al,	dx
     55	    0031  3C 55				 cmp al, 55h
     56	    0033  74 05				 je @3
     57	    0035  B8 0001			 mov ax, 1	  ; 8250 chip
Turbo Assembler	 Version 3.1	    01/10/06 16:05:18	    Page 2
detect.asm



     58	    0038  EB 32				 jmp short @uret
     59	    003A  B0 AA			 @3:	 mov al, 0AAh
     60	    003C  EE				 out dx, al
     61	    003D  90				 nop
     62	    003E  90				 nop
     63	    003F  90				 nop
     64	    0040  EC				 in al,	dx
     65	    0041  3C AA				 cmp al, 0AAh
     66	    0043  74 05				 je @4
     67	    0045  B8 0001			 mov ax, 1	  ; 8250 chip
     68	    0048  EB 22				 jmp short @uret
     69	    004A			 @4:	 ;FIFO ?
     70	    004A  83 EA	05			 sub dx, 5
     71	    004D  B0 01				 mov al, 1
     72	    004F  EE				 out dx, al
     73	    0050  90				 nop
     74	    0051  90				 nop
     75	    0052  90				 nop
     76	    0053  EC				 in al,	dx
     77	    0054  A8 80				 test al, 80h
     78	    0056  75 05				 jnz @5
     79	    0058  B8 0002			 mov ax, 2	  ; 16450/82450	chip
     80	    005B  EB 0F				 jmp short @uret
     81	    005D  A8 40			 @5:	 test al, 40h
     82	    005F  75 05				 jnz @6
     83	    0061  B8 0003			 mov ax, 3	  ; 16550 chip
     84	    0064  EB 06				 jmp short @uret
     85	    0066  32 C0			 @6:	 xor al, al
     86	    0068  EE				 out dx, al
     87	    0069  B8 0004			 mov ax, 4	  ; 16550A chip
     88	    006C  5A			 @uret:	 pop dx
     89	    006D  C3				 ret
     90	    006E			 _detectUART endp
     91
     92					 ;int detectIRQ()
     93					 ;POZOR: PORT musi byt nastaveny pred volanim!!
     94					 public	_detectIRQ
     95	    006E			 _detectIRQ proc near
     96	    006E  52				 push dx
     97	    006F  53				 push bx
     98	    0070  FA				 cli
     99	    0071  2E: 8B 16 0000e		 mov dx, word ptr [_PORT]
    100	    0076  83 C2	03			 add dx, 3
    101	    0079  EC				 in al,	dx ;read LCR
    102	    007A  A2 0004r			 mov byte ptr [lcr], al
    103	    007D  24 7F				 and al, 7Fh
    104	    007F  EE				 out dx, al
    105	    0080  83 EA	02			 sub dx, 2 ;ier	(base +	1)
    106	    0083  EC				 in al,	dx
    107	    0084  A2 0003r			 mov byte ptr [ier], al
    108	    0087  32 C0				 xor al, al
    109	    0089  EE				 out dx, al ; zakaze vsetky prerusenia UARTu
    110	    008A  83 C2	03			 add dx, 3 ;mcr	(base +	4)
    111	    008D  EC				 in al,	dx
    112	    008E  A2 0005r			 mov byte ptr [mcr], al
    113	    0091  24 0F				 and al, 0Fh
    114	    0093  0C 0C				 or al,	0Ch
Turbo Assembler	 Version 3.1	    01/10/06 16:05:18	    Page 3
detect.asm



    115	    0095  EE				 out dx, al ;povolit prerusenia	UARTu
    116	    0096  BA 0021			 mov dx, 21h
    117	    0099  EC				 in al,	dx
    118	    009A  A2 0002r			 mov byte ptr [imr], al	;interrupt mask	register (imr)
    119	    009D  4A				 dec dx
    120	    009E  B0 0A				 mov al, 0Ah
    121	    00A0  EE				 out dx, al ; prepare to read IRR
    122	    00A1  B3 FC				 mov bl, 0FCh ;maska IRQ2-7
    123	    00A3  2E: 8B 16 0000e		 mov dx, word ptr [_PORT]
    124	    00A8  42				 inc dx
    125	    00A9  B0 02				 mov al, 2  ; enable 'transmitter empty' interrupt
    126	    00AB  EE				 out dx, al
    127	    00AC  BA 0020			 mov dx, 20h
    128	    00AF  EC				 in al,	dx
    129	    00B0  22 D8				 and bl, al ; select risen interrupt request
    130	    00B2  2E: 8B 16 0000e		 mov dx, word ptr [_PORT]
    131	    00B7  42				 inc dx
    132	    00B8  32 C0				 xor al, al
    133	    00BA  EE				 out dx, al ; disable 'transmitter empty' interrupt
    134	    00BB  BA 0020			 mov dx, 20h
    135	    00BE  EC				 in al,	dx
    136	    00BF  F6 D8				 neg al
    137	    00C1  22 D8				 and bl, al ; select fallen interrupt request
    138	    00C3  2E: 8B 16 0000e		 mov dx, word ptr [_PORT]
    139	    00C8  42				 inc dx
    140	    00C9  B0 02				 mov al, 2
    141	    00CB  EE				 out dx, al ; enable 'trans emp' int
    142	    00CC  BA 0020			 mov dx, 20h
    143	    00CF  EC				 in al,	dx
    144	    00D0  22 D8				 and bl, al ; select risen interrupt request
    145	    00D2  42				 inc dx
    146	    00D3  F6 DB				 neg bl
    147	    00D5  8A C3				 mov al, bl
    148	    00D7  EE				 out dx, al  ; unmask only this	interrupt(s)
    149	    00D8  4A				 dec dx
    150	    00D9  B0 0C				 mov al, 0Ch
    151	    00DB  EE				 out dx, al  ; enter the poll mode
    152	    00DC  BA 0020			 mov dx, 20h
    153	    00DF  EC				 in al,	dx
    154	    00E0  32 E4				 xor ah, ah
    155	    00E2  A3 0000r			 mov word ptr [irq], ax
    156	    00E5  2E: 8B 16 0000e		 mov dx, word ptr [_PORT]
    157	    00EA  83 C2	05			 add dx, 5
    158	    00ED  EC				 in al,	dx
    159	    00EE  83 EA	05			 sub dx, 5
    160	    00F1  EC				 in al,	dx
    161	    00F2  83 C2	02			 add dx, 2
    162	    00F5  EC				 in al,	dx
    163	    00F6  83 C2	04			 add dx, 4
    164	    00F9  EC				 in al,	dx
    165	    00FA  83 EA	05			 sub dx, 5
    166	    00FD  A0 0003r			 mov al, byte ptr [ier]
    167	    0100  EE				 out dx, al
    168	    0101  83 C2	02			 add dx, 2
    169	    0104  A0 0004r			 mov al, byte ptr [lcr]
    170	    0107  EE				 out dx, al
    171	    0108  42				 inc dx
Turbo Assembler	 Version 3.1	    01/10/06 16:05:18	    Page 4
detect.asm



    172	    0109  A0 0005r			 mov al, byte ptr [mcr]
    173	    010C  EE				 out dx, al
    174	    010D  BA 0020			 mov dx, 20h
    175	    0110  8B C2				 mov ax, dx
    176	    0112  EE				 out dx, al ; end of interrupt mode
    177	    0113  42				 inc dx
    178	    0114  A0 0002r			 mov al, byte ptr [imr]
    179	    0117  EE				 out dx, al
    180	    0118  FB				 sti
    181	    0119  A1 0000r			 mov ax, word ptr [irq]
    182	    011C  25 0080			 and ax, 80h
    183	    011F  3D 0000			 cmp ax, 0
    184	    0122  75 05				 jnz @good
    185	    0124  B8 FFFF			 mov ax, -1
    186	    0127  EB 06				 jmp short @gret
    187	    0129  A1 0000r		 @good:	 mov ax, word ptr [irq]
    188	    012C  25 0007			 and ax, 7
    189	    012F  FB			 @gret:	 sti
    190	    0130  5B				 pop bx
    191	    0131  5A				 pop dx
    192	    0132  C3				 ret
    193	    0133			 _detectIRQ endp
    194
    195
    196					 end
Turbo Assembler	 Version 3.1	    01/10/06 16:05:18	    Page 5
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "01/10/06"
??FILENAME			  Text	 "detect  "
??TIME				  Text	 "16:05:18"
??VERSION			  Number 030A
@1				  Near	 _TEXT:0018
@2				  Near	 _TEXT:0027
@3				  Near	 _TEXT:003A
@32BIT				  Text	 0
@4				  Near	 _TEXT:004A
@5				  Near	 _TEXT:005D
@6				  Near	 _TEXT:0066
@CODE				  Text	 _TEXT
@CODESIZE			  Text	 0
@CPU				  Text	 0F0FH
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 1
@FILENAME			  Text	 DETECT
@GOOD				  Near	 _TEXT:0129
@GRET				  Near	 _TEXT:012F
@INTERFACE			  Text	 00H
@MODEL				  Text	 3
@STACK				  Text	 DGROUP
@URET				  Near	 _TEXT:006C
@WORDSIZE			  Text	 2
IER				  Byte	 DGROUP:0003
IMR				  Byte	 DGROUP:0002
IRQ				  Word	 DGROUP:0000
LCR				  Byte	 DGROUP:0004
MCR				  Byte	 DGROUP:0005
_DETECTIRQ (_detectIRQ)		  Near	 _TEXT:006E
_DETECTUART (_detectUART)	  Near	 _TEXT:0000
_PORT (_PORT)			  Word	 _TEXT:---- Extern

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0006 Word	  Public  DATA
_TEXT				  16  0133 Word	  Public  CODE
